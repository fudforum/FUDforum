<?php
/**
* copyright            : (C) 2001-2023 Advanced Internet Designs Inc.
* email                : forum@prohost.org
* $Id$
*
* This program is free software; you can redistribute it and/or modify it
* under the terms of the GNU General Public License as published by the
* Free Software Foundation; version 2 of the License.
**/

// Initialize plugin.
plugin_add_hook('BBCODE2HTML', 'plugin_wikilinks_tag_to_html');
plugin_add_hook('HTML2BBCODE', 'plugin_wikilinks_html_to_tag');

// Convert [[wikilink]]s to html code (post message).
function plugin_wikilinks_tag_to_html($array) {
	list($bbcode) = $array;

	if ((@include_once $GLOBALS['PLUGIN_PATH'] .'wikilinks.ini') === false) {
		die('ERROR: Please configure the wikilinks plugin from the Plugin Manager Control panel.');
	}

	// Use PCRE Unicode regex (required for languages like Russian) or the old crappy ones.
	if (@preg_match('/\p{L}/u', 'a') == 1) {
		$re1 = '!\[\[([\p{L}\p{N}\p{P}\p{Z}]+?)\]\](\w*)!ui';
		$re2 = '!\[\[([\p{L}\p{N}\p{P}\p{Z}]+?)\|([\p{L}\p{N}\p{P}\p{Z}]+?)\]\]!ui';
	} else {
		$re1 = '!\[\[([\w\s\*\/\.:-]+?)\]\](\w*)!i';
		$re2 = '!\[\[([\w\s\*\/\.:-]+?)\|([\w\s\/-]+)\]\]!i';
	}

	// Remove [notag] blocks.
	$notag_pre = NULL; $i = 0;
	if (preg_match_all('#\[notag\](.*?)\[\/notag\]#si', $bbcode, $notags, PREG_SET_ORDER)) {
		foreach ($notags as $notag) {
			$bbcode = str_replace($notag[0], '***nOtAg_sTrInG'. $i .'***', $bbcode);
			$notag_pre[$i++] = $notag[0];
		}
	}
	// Remove [code] blocks.
	$code_pre = NULL; $i = 0;
	if (preg_match_all('#\[code\](.*?)\[\/code\]#si', $bbcode, $codes, PREG_SET_ORDER)) {
		foreach ($codes as $code) {
			$bbcode = str_replace($code[0], '***cOdE_sTrInG'. $i .'***', $bbcode);
			$code_pre[$i++] = $code[0];
		}
	}

	// Convert wiki-style links into BBcode links.
	while (preg_match($re1, $bbcode, $res)) {
		$m = str_replace(' ', '_', $res[1]);
		$bbcode = str_replace($res[0], '[url='. $ini['WIKILINKS_URL'] . $m .']'. $res[1] . $res[2] .'[/url]', $bbcode);
	}
	while (preg_match($re2, $bbcode, $res)) {
		$m = str_replace(' ', '_', $res[1]);
		$bbcode = str_replace($res[0], '[url='. $ini['WIKILINKS_URL'] . $m .']'. $res[2] .'[/url]', $bbcode);
	}

	$bbcode = wiki2bbcode($bbcode);

	// Reinsert [notag] blocks.
	if (is_array($notag_pre)) {
		foreach($notag_pre as $i => $notag) {
			$bbcode = str_replace('***nOtAg_sTrInG'. $i .'***', $notag, $bbcode);
		}
	}
	// Reinsert [code] blocks.
	if (is_array($code_pre)) {
		foreach($code_pre as $i => $code) {
			$bbcode = str_replace('***cOdE_sTrInG'. $i .'***', $code, $bbcode);
		}
	}

	return array($bbcode);
}

// Convert html back to [[wikilink]] tags (edit message).
function plugin_wikilinks_html_to_tag($array) {
	list($bbcode) = $array;

	if ((@include_once $GLOBALS['PLUGIN_PATH'] .'wikilinks.ini') === false) {
		die('ERROR: Please configure the wikilinks plugin from the Plugin Manager Control panel.');
	}

	while (preg_match('!<a href="'. str_replace('://', '&#58;&#47;&#47;', $ini['WIKILINKS_URL']) .'(.+?)"( target="_blank")?>(.+?)</a>!ui', $bbcode, $res)) {
		$m = str_replace('_', ' ', $res[1]);
		if ( strpos($res[3], $m) === 0 ) {  // start with
			$x = substr($res[3], strlen($m));
			$bbcode = str_replace($res[0], '[['. $m .']]'. $x, $bbcode);
		} else {
			$bbcode = str_replace($res[0], '[['. $m .'|'. $res[3] .']]', $bbcode);
		}
	}

	return array($bbcode);
}

function wikilinks_info() {
	return array('name' => 'Wikilink tags',
				'desc' => 'Allow forum users to use [[wikilink]] tags as shorthand to link to articles on the site\'s wiki (or any other wiki for that matter).',
				'cat'  => 'BBcode',
				'version' => '1.3');
}

function wikilinks_enable() {
	if ((@include_once $GLOBALS['PLUGIN_PATH'] .'wikilinks.ini') === false) {
		return array(null, 'Please configure the wikilinks plugin before enabling it.');	// OK, Err.
	}
}

function wikilinks_config() {
	$vars = array('WIKILINKS_URL');

	if ((@include $GLOBALS['PLUGIN_PATH'] .'wikilinks.ini') === false) {
		foreach ($vars as $v) {
			$ini[$v] = '';
		}
	}

	if (isset($_POST['Set'])) {
		foreach ($vars as $v) {
			$ini[$v] = trim($_POST[$v]);
		}
		$fp = fopen($GLOBALS['PLUGIN_PATH'] .'wikilinks.ini', 'w');
		fwrite($fp, '<?php $ini = '. var_export($ini, 1) .'; ?>');
		fclose($fp);
		pf(successify('Settings successfully saved.'));
	}
	?>
<p>Base URL to your wiki:<br />
<input type="url" name="WIKILINKS_URL" value="<?php echo $ini['WIKILINKS_URL'] ?>" size="60" /><br />
<font size="-1">For example, enter <i>http://en.wikipedia.org/wiki/</i> to link tags like <b>[[FUDforum]]</b> to Wikipedia articles.</font></p>
	<?php
}

function wiki2bbcode($text)
{
// Regex from https://github.com/lahdekorpi/Wiky.php/blob/master/wiky.inc.php

	// Headings
	$text = preg_replace('/====== (.+?) ======/', '[h5]$1[/h5]', $text);
	$text = preg_replace('/===== (.+?) =====/', '[h4]$1[/h4]', $text);
	$text = preg_replace('/==== (.+?) ====/', '[h3]$1[/h3]', $text);
	$text = preg_replace('/=== (.+?) ===/', '[h2]$1[/h2]', $text);
	$text = preg_replace('/== (.+?) ==/', '[h1]$1[/h1]', $text);

	// Bold & italic
	$text = preg_replace("/'''([^']+?)'''/", '[b]$1[/b]', $text);
	$text = preg_replace("/''([^']+?)''/", '[i]$1[/i]', $text);

	// Horizontal rule
	$text = preg_replace('/^----$/', '[hr]', $text);

	// Lists
	$text = preg_replace('/^\* (.*?)$/m', '[list][*]$1[/list]', $text);
	$text = preg_replace('/\[\/list\][\n\r]*\[list\]/', '', $text);

	$text = preg_replace('/^# (.*?)$/m', '[list type=1][*]$1[/list]', $text);
	$text = preg_replace('/\[\/list\][\n\r]*\[list type=1\]/', '', $text);

	return $text;
}

