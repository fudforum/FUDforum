#!/usr/bin/php -q
<?php
/***************************************************************************
* copyright            : (C) 2001-2021 Advanced Internet Designs Inc.
* email                : forum@prohost.org
* $Id$
*
* This program is free software; you can redistribute it and/or modify it 
* under the terms of the GNU General Public License as published by the 
* Free Software Foundation; version 2 of the License, or 
* (at your option) any later version.
***************************************************************************/

/** Create an archive of all files requred to install or upgrade a forum. */
function create_file_archive($dir)
{
	$dirs = array(realpath($dir));
	$base = dirname($dirs[0]);
	$data = '';

        foreach($dirs as &$v) {		// Note the &$v, we're going to change the array.
		if (!($d = opendir($v))) {
			seterr('Cannot access ['. $path .'].');
		}

		$dd = str_replace($base, '', $v);
		if ($dd && ($dd[0] == '/' || $dd[0] == '\\')) {
			$dd = substr($dd, 1);
		}

		while (($f = readdir($d))) {
			if ($f == '.' || $f == '..' || $f == 'CVS' || $f == '.svn') continue;

			if (is_file($v .'/'. $f)) {
				$fdata = file_get_contents($v .'/'. $f);
				if ($f == 'lib.js') {
				 	// Crude JavaScript compression.
					$multiline_comment = '/\/\*(?!-)[\x00-\xff]*?\*\//';
					$fdata = preg_replace($multiline_comment, '', $fdata);
					$singleline_comment = '/[^:]\/\/.*/';
					$fdata = preg_replace($singleline_comment, '', $fdata);
					$extra_space = '/\s+/';
					// $fdata = preg_replace($extra_space, ' ', $fdata);
					$removable_space = '/\s?([\{\};\=\(\)\/\+\*-])\s?/';
					$fdata = preg_replace($removable_space, "\\1", $fdata);
					$empty_lines = '/^\n+|^[\t\s]*\n+/m';
					$fdata = str_replace($empty_lines, '', $fdata);
  				}
				$data .= '//'. $f .'//0600//'. $dd .'//'. md5($fdata) .'//'. strlen($fdata) ."//\n". $fdata ."\n";
			} else {
				$data .= '//'. $f .'//0700//'. $dd ."//\n";
				$dirs[] = $v .'/'. $f;
			}
		}
		closedir($d);
	}

	return $data;
}

/** Print error message and exit. */
function seterr($msg)
{
	fwrite(STDERR, $msg ."\n"); 
	exit;
}

/* main */
	error_reporting(E_ALL);
	@ini_set('display_errors', 1);
	@ini_set('memory_limit', '128M');	// PHP 5.3's default, old defaults too small.
	if (!defined('STDERR')) {
		define('STDERR', fopen('php://stderr', 'wb'));
	}

	if (!isset($_SERVER['argv'][1]) ) {
		seterr("No arguments.\n\tSyntax: create_file_archive directory_name [use compression]");
	} else if (!@is_dir($_SERVER['argv'][1])) {
		seterr('ERROR: ['. $_SERVER['argv'][1] ."] is not a valid valid directory.\nPlease specify a valid directory to package.");
	}

	if (isset($_SERVER['argv'][2]) && !extension_loaded('zlib')) {
		seterr('The zlib extension that is required to compress the archive is not installed. Please install it or restart without compression.');
	}	

	$_SERVER['argv'][1] = preg_replace('!/+$!', '', $_SERVER['argv'][1]);

	$archive = create_file_archive($_SERVER['argv'][1]);
	$check_sum = md5($archive);

	$clean = array('<?' => 'PHP_OPEN_TAG', '<%' => 'PHP_OPEN_ASP_TAG');

	if (isset($_SERVER['argv'][2])) {
		$a_len = str_pad(strlen($archive), 10, '0', STR_PAD_LEFT);
		echo $check_sum . $a_len . strtr(gzcompress($archive, 9), $clean);
	} else {
		$clean['<?'] = 'RAW_PHP_OPEN_TAG';
		echo $check_sum . strtr($archive, $clean);
	}
?>
