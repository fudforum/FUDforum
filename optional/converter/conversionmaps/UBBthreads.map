<?php
/***************************************************************************
* copyright            : (C) 2001-2013 Advanced Internet Designs Inc.
* email                : forum@prohost.org
* $Id: UBBthreads.map 5054 2010-10-23 00:47:24Z naudefj $
*
* This program is free software; you can redistribute it and/or modify it 
* under the terms of the GNU General Public License as published by the 
* Free Software Foundation; version 2 of the License. 
***************************************************************************/

function source_read_config($dir) {
	config_file_include('includes/config.inc.php');
	
	change_global_settings(array(
		'FORUM_TITLE' => $GLOBALS['config']['HOMEPAGE_TITLE'],
		'FORUM_DESCR' => $GLOBALS['config']['COMMUNITY_TITLE'],
		'ADMIN_EMAIL' => $GLOBALS['config']['SITE_EMAIL']
	));
}

function source_db_connect() {
	bbconn(	$GLOBALS['config']['DATABASE_SERVER'],
		null,
		$GLOBALS['config']['DATABASE_NAME'],
		$GLOBALS['config']['DATABASE_USER'],
		$GLOBALS['config']['DATABASE_PASSWORD'],
		$GLOBALS['config']['TABLE_PREFIX'] );
}

function source_load_avatars() {
	$avatar_dir = $GLOBALS['config']['FULL_PATH'] .'/images/avatars/default/';
	$dir = opendir($avatar_dir);
	while( $file = readdir($dir) ) {
		if( $file == '.' || $file == '..' || @is_dir($avatar_dir . $file) || @is_link($avatar_dir . $file) ) continue;
		$avatar = array(
			'file'      => $avatar_dir . $file,
			'descr'     => '',
		);
		target_add_avatar($avatar);
	}
}

function source_load_smilies() {
	$c = bbq('SELECT * FROM '. dbpref .'graemlins');
	while ($r = bbfetch($c)) {
		$smiley = array(
			'file'      => $GLOBALS['config']['FULL_PATH'] .'/images/graemlins/default/'. $r->GRAEMLIN_IMAGE,
			'code'      => $r->GRAEMLIN_MARKUP_CODE,
			'descr'     => $r->GRAEMLIN_SMILEY_CODE,
			'vieworder' => $r->GRAEMLIN_ORDER
		);
		target_add_smiley($smiley);
	}
}

function source_load_users() {
	$c = bbq('SELECT * FROM '. dbpref .'users u LEFT JOIN '. dbpref .'user_data d ON u.user_id = d.user_id LEFT JOIN '. dbpref .'user_profile p ON u.user_id = p.user_id WHERE u.user_id >1 ORDER BY u.user_id');
	while ($r = bbfetch($c)) {
		// Hack for user id of 1, since this id is reserved for anon user in FUDforum.
		if ($r->USER_ID == 1) $r->USER_ID = $GLOBALS['hack_id'] = bbfetch(bbq('SELECT MAX(user_id) AS cnt FROM '. dbpref .'users'))->cnt + 1;

		$user = array(
			'id'        => $r->USER_ID,
			'login'     => $r->USER_LOGIN_NAME,
			'name'      => $r->USER_DISPLAY_NAME,
			'passwd'    => $r->USER_PASSWORD,
			'salt'      => '',
			'last_visit'=> $r->USER_LAST_VISIT_TIME,
			'last_read' => 0,
			'join_date' => $r->USER_REGISTERED_ON,
			'reg_ip'    => $r->USER_REGISTRATION_IP,
			'email'     => $r->USER_REAL_EMAIL,
			'home_page' => $r->USER_HOMEPAGE,
			'location'  => $r->USER_LOCATION,
			'interests' => $r->USER_HOBBIES,
			'occupation'=> $r->USER_OCCUPATION,
			'birthday'  => strtotime($r->USER_BIRTHDAY),	// 6/2/1959
			'time_zone' => $r->USER_TIME_OFFSET,
			'sig'       => $r->USER_SIGNATURE,
			'avatar'    => $r->USER_AVATAR,
			'icq'       => $r->USER_ICQ,
			'facebook'  => '',
			'yahoo'     => $r->USER_YAHOO,
			'users_opt' => 0
		);
		$user['users_opt'] |= ($r->USER_ID == $GLOBALS['config']['MAIN_ADMIN_ID']) ? 1048576 : 0;	// Admin.
		$user['users_opt'] |= ($r->USER_NOTIFY_ON_PM == 'yes') ? 64 : 0;
		$user['users_opt'] |= ($r->USER_VISIBLE_ONLINE_STATUS=='no') ? 32768 : 0;
		$user['users_opt'] |= ($r->USER_IS_APPROVED=='no') ? 2097152 : 0;
		$user['users_opt'] |= ($r->USER_IS_BANNED) ? 32768 : 0;
		target_add_user($user);
	}
}

function source_load_cats() {
	$c = bbq('SELECT * FROM '. dbpref .'categories ORDER BY category_id');
	while ($r = bbfetch($c)) {
		$cat = array(
			'id'          => $r->CATEGORY_ID,
			'name'        => $r->CATEGORY_TITLE,
			'description' => $r->CATEGORY_DESCRIPTION,
			'view_order'  => $r->CATEGORY_SORT_ORDER
		);
		target_add_cat($cat);
	}
}

function source_load_forums() {
	$c = bbq('SELECT * FROM '. dbpref .'forums ORDER BY forum_id');
	while ($r = bbfetch($c)) {
		$forum = array(
			'id'          => $r->FORUM_ID,
			'cat_id'      => $r->CATEGORY_ID,
			'name'        => $r->FORUM_TITLE,
			'description' => $r->FORUM_DESCRIPTION,
			'view_order'  => $r->FORUM_SORT_ORDER,
			'post_passwd' => null,
			'url_redirect'=> null
		);
		target_add_forum($forum);
	}
}

function source_load_topics() {
	$c = bbq('SELECT * FROM '. dbpref .'topics');
	while ($r = bbfetch($c)) {
		$topic = array(
			'id'          => $r->TOPIC_ID,
			'forum_id'    => $r->FORUM_ID,
			'root_msg_id' => $r->POST_ID,
			'views'       => $r->TOPIC_VIEWS,
			'replies'     => $r->TOPIC_REPLIES,
			'thread_opt'  => 0
		);
		$topic['thread_opt'] |= ($r->TOPIC_STATUS == 'C') ? 1 : 0;	// Topic closed.
		$topic['thread_opt'] |= ($r->TOPIC_IS_STICKY)     ? 4 : 0;	// Sticky topic.
		target_add_topic($topic);
	}
}

function source_load_messages() {
	$c = bbq('SELECT p.*, t.forum_id AS "FORUM_ID" FROM '. dbpref .'posts p LEFT JOIN '. dbpref .'topics t ON p.topic_id = t.topic_id ORDER BY p.post_id');
	while ($r = bbfetch($c)) {

		// Remove unneeded BR tags.
		$r->POST_DEFAULT_BODY = preg_replace('/<br>/m', "\n", $r->POST_DEFAULT_BODY);

		$message = array(
			'id'           => $r->POST_ID,
			'thread_id'    => $r->TOPIC_ID,
			'poster_id'    => $r->USER_ID,
			'forum_id'     => $r->FORUM_ID,
			'post_stamp'   => $r->POST_POSTED_TIME,
			'update_stamp' => $r->POST_LAST_EDITED_TIME,
			'updated_by'   => $r->POST_LAST_EDITED_BY,
			'subject'      => $r->POST_SUBJECT,
			'ip_addr'      => $r->POST_POSTER_IP,
			'msg_opt'      => 0,
			'body'         => $r->POST_DEFAULT_BODY
		);
		target_add_message($message);
	}
}

function source_load_attachments() {
	$c = bbq('SELECT * FROM '. dbpref .'files');
	while ($r = bbfetch($c)) {
		$att = array(
			'file'           => $GLOBALS['config']['ATTACHMENTS_PATH'] .'/'. $r->FILE_NAME,
			'original_name'  => $r->FILE_ORIGINAL_NAME,
			'user_id'        => $r->USER_ID,
			'post_id'        => $r->POST_ID,
			'download_count' => $r->FILE_DOWNLOADS
		);
		target_add_attachment($att);
	}
}

function source_load_polls() {
	$c = bbq('SELECT p.*, t.forum_id AS "FORUM_ID" FROM '. dbpref .'poll_data p LEFT JOIN '. dbpref .'posts m ON p.POST_ID = m.POST_ID LEFT JOIN '. dbpref .'topics t ON m.TOPIC_ID = t.TOPIC_ID');
	while ($r = bbfetch($c)) {
		$poll = array(
			'id'            => $r->POLL_ID,
			'name'          => $r->POLL_BODY,
			'owner'         => $r->USER_ID,
			'creation_date' => $r->POLL_START_TIME,
			'expiry_date'   => $r->POLL_STOP_TIME,
			'post_id'       => $r->POST_ID,
			'forum_id'      => $r->FORUM_ID
		);
		target_add_poll($poll);

		$c2 = bbq('SELECT * FROM '. dbpref .'poll_options WHERE poll_id = '. $r->POLL_ID);
		while ($r2 = bbfetch($c2)) {
			$question = array(
				'id'    => $r2->OPTION_ID,
				'name'  => $r2->OPTION_BODY
			);
			$qid = target_add_poll_question($question);

			$c3 = bbq('SELECT * FROM '. dbpref .'poll_votes WHERE poll_id = '. $r->POLL_ID .' AND option_id = '. $r2->OPTION_ID);
			while ($r3 = bbfetch($c3)) {
				$vote = array(
					'poll_id'  => $r->POLL_ID,
					'user_id'  => null,
					'ip_addr'  => $r3->VOTES_USER_ID_IP,
					'poll_opt' => $qid
				);
				target_add_poll_vote($vote);
			}
		}
	}
}

function source_load_topic_subscriptions() {
	$c = bbq('SELECT * FROM '. dbpref .'watch_lists WHERE watch_type = \'t\'');
	while ($r = bbfetch($c)) {
		$sub = array(
			'user_id'   => $r->USER_ID,
			'topic_id'  => $r->WATCH_ID
		);
		target_add_topic_subscription($sub);
	}
}

function source_load_forum_subscriptions() {
	$c = bbq('SELECT * FROM '. dbpref .'watch_lists WHERE watch_type = \'f\'');
	while ($r = bbfetch($c)) {
		$sub = array(
			'user_id'   => $r->USER_ID,
			'forum_id'  => $r->WATCH_ID
		);
		target_add_forum_subscription($sub);
	}
}

function source_load_private_messages() {
	$c = bbq('SELECT p.user_id as "FROM", u.user_id as "TO", p.POST_TIME, u.MESSAGE_LAST_READ, t.TOPIC_SUBJECT, p.POST_DEFAULT_BODY FROM '. dbpref .'private_message_posts p LEFT JOIN '. dbpref .'private_message_topics t ON p.TOPIC_ID = t.TOPIC_ID LEFT JOIN '. dbpref .'private_message_users u ON p.TOPIC_ID = u.TOPIC_ID');
	while ($r = bbfetch($c)) {
		// 1 INBOX, 2 SAVED, 3 SENT, 4 DRAFT, 5 TRASH
		$folder = ($r->FROM==$r->TO) ? 3 : 1;

		$pm = array(
			'ouser_id'   => $r->FROM,
			'duser_id'   => $r->TO,
			'ip_addr'    => null,
			'post_stamp' => $r->POST_TIME,
			'read_stamp' => $r->MESSAGE_LAST_READ,
			'fldr'       => $folder,
			'subject'    => $r->TOPIC_SUBJECT,
			'pmsg_opt'   => 0,
			'to_list'    => $r->TO,
			'body'       => $r->POST_DEFAULT_BODY
		);
		target_add_private_message($pm);
	}
}

function source_load_calendar_events() {
	$c = bbq('SELECT * FROM '. dbpref .'calendar_events');
	while ($r = bbfetch($c)) {
		$event = array(
			'day'	=> $r->CALENDAR_EVENT_DAY,
			'month' => $r->CALENDAR_EVENT_MONTH,
			'year'  => $r->CALENDAR_EVENT_YEAR,
			'link'  => null,
			'descr' => $r->CALENDAR_EVENT_SUBJECT
		);
		target_load_calendar_event($event);
	}
}

?>
